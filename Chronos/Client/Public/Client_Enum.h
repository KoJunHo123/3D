#pragma once

namespace Client
{
	enum PLAYER_ANIM {
		PLAYER_IMPACT_DEFLECT_R,

		PLAYER_ACTION_DRAGONHEART,	// 이게 포션
		PLAYER_ACTION_DRAGONSTONE,	// 이게 스킬
		PLAYER_ACTION_POWERSTONE,	// 이건 패스
		PLAYER_ACTION_RUNEKEYHOLE,	// 키 꽂기	// 회전 죽이기 4
		PLAYER_ACTION_TELEPORT_LONG_ENTER,	// 텔포 시작
		PLAYER_ACTION_TELEPORT_LONG_EXIT,	// 텔포 끝
		PLAYER_ACTION_TELEPORT_LONG_IDLE,	// 텔포 진행중
		PLAYER_ACTION_WAYPOINT_GRAB,	// 회전 죽이기
		PLAYER_ACTION_WAYPOINT_GRAB_IDLE,// 회전 죽이기
		PLAYER_ACTION_WAYPOINT_KNOCKDOWN,	// 부활
		PLAYER_ACTION_WAYPOINT_RELEASE,// 회전 죽이기

		PLAYER_JUMP_FALL,

		PLAYER_IMPACT_DEATH_F,	// 앞으로 쓰러짐
		PLAYER_IMPACT_DEATH_B,	// 뒤로 쓰러짐
		PLAYER_IMPACT_DEFLECT_L,
		PLAYER_IMPACT_HEAVY_FROMB,
		PLAYER_IMPACT_HEAVY_FROMF,
		PLAYER_IMPACT_MASSIVE_FROMB,
		PLAYER_IMPACT_MASSIVE_FROMF,
		PLAYER_IMPACT_STUN_FROMF,

		PLAYER_BLOCK_COUNTER,
		PLAYER_BLOCK_IDLE,
		PLAYER_BLOCK_IMPACT,
		PLAYER_BLOCK_IMPACT_BREAK,
		PLAYER_BLOCK_START,
		PLAYER_BLOCK_TURN_L,
		PLAYER_BLOCK_TURN_R,
		PLAYER_BLOCK_WALK_B,
		PLAYER_BLOCK_WALK_F,
		PLAYER_BLOCK_WALK_L,
		PLAYER_BLOCK_WALK_R,

		PLAYER_ATK_BACK,
		PLAYER_ATK_DODGE_B,
		PLAYER_ATK_DODGE_L,
		PLAYER_ATK_DODGE_R,
		PLAYER_ATK_LIGHT_01,
		PLAYER_ATK_LIGHT_02,
		PLAYER_ATK_LIGHT_03,
		PLAYER_ATK_LIGHT_04,
		PLAYER_ATK_POWER_01,
		PLAYER_ATK_POWER_01_CHARGE,
		PLAYER_ATK_POWER_02,
		PLAYER_ATK_POWER_02_CHARGE,
		PLAYER_ATK_RUN,

		PLAYER_MOVE_DODGE_B,
		PLAYER_MOVE_DODGE_F,
		PLAYER_MOVE_DODGE_L,
		PLAYER_MOVE_DODGE_R,
		PLAYER_MOVE_IDLE,
		PLAYER_MOVE_JOG_B,
		PLAYER_MOVE_JOG_F,
		PLAYER_MOVE_JOG_F_D,
		PLAYER_MOVE_JOG_F_U,
		PLAYER_MOVE_JOG_L,
		PLAYER_MOVE_JOG_R,
		PLAYER_MOVE_TURN_L,
		PLAYER_MOVE_TURN_R,
		PLAYER_MOVE_WALK_B,
		PLAYER_MOVE_WALK_F,
		PLAYER_MOVE_WALK_F_D,
		PLAYER_MOVE_WALK_F_U,
		PLAYER_MOVE_WALK_L,
		PLAYER_MOVE_WALK_R,

		PLAYER_ANIM_END
	};
	enum BOSS_ANIM
	{
		BOSS_LAB_ATK_CHARGE,
		BOSS_LAB_ATK_CHARGE_INTO,
		BOSS_LAB_ATK_CHARGE_OUT,
		BOSS_LAB_ATK_DOUBLE_SWIPE,
		BOSS_LAB_ATK_RUSH,
		BOSS_LAB_ATK_SWIPE_L,
		BOSS_LAB_ATK_SWIPE_R,
		BOSS_LAB_IDLE,
		BOSS_LAB_IMPACT_DEATH,
		BOSS_LAB_STUN,
		BOSS_LAB_STUN_IDLE,
		BOSS_LAB_STUN_IMPACT,
		BOSS_LAB_STUN_WAKEUP,
		BOSS_LAB_TELEPORT_APPEAR,
		BOSS_LAB_TELEPORT_LAUNCH,
		BOSS_LAB_TELEPORT_LAUNCH_ROAR,
		BOSS_LAB_TELEPORT_LAUNCH_UNDERGROUND,
		BOSS_LAB_TELEPORT_START,
		BOSS_LAB_WALKF,
		BOSS_ANIM_END
	};
	enum CONSTRUCT_ANIM
	{
		LAB_CONSTRUCT_ATK_1,
		LAB_CONSTRUCT_ATK_2,
		LAB_CONSTRUCT_ATK_3,
		LAB_CONSTRUCT_ATK_3HIT_COMBO,
		LAB_CONSTRUCT_ATK_DOWNSWIPE,
		LAB_CONSTRUCT_ATK_SHIELDSWIPE,
		LAB_CONSTRUCT_ATK_VERTICALSLAM,
		LAB_CONSTRUCT_IDLE,
		LAB_CONSTRUCT_IMPACT_B,
		LAB_CONSTRUCT_IMPACT_DEATH,
		LAB_CONSTRUCT_IMPACT_F_SHORT,
		LAB_CONSTRUCT_JUMP_FALL,
		LAB_CONSTRUCT_WALK_B,
		LAB_CONSTRUCT_WALK_F,
		LAB_CONSTRUCT_WALK_L,
		LAB_CONSTRUCT_WALK_R,
		CONSTRUCT_ANIM_END
	};
	enum DRUM_ANIM
	{
		LAB_DRUM_ATK_BELLY,
		LAB_DRUM_ATK_DRUM_F_HEAVY,
		LAB_DRUM_ATK_SWING_01,
		LAB_DRUM_IDLE,
		LAB_DRUM_IMPACT_B,
		LAB_DRUM_IMPACT_DEATH,
		LAB_DRUM_IMPACT_HEAVY_F,
		LAB_DRUM_JUMP_FALL,
		LAB_DRUM_SPAWN,
		LAB_DRUM_WALK_B,
		LAB_DRUM_WALK_F,
		LAB_DRUM_WALK_L,
		LAB_DRUM_WALK_R,
		DRUM_ANIM_END
	};
	enum MAGE_ANIM
	{
		LAB_MAGE_ATK_COMBO_01_DASH,
		LAB_MAGE_ATK_COMBO_01_START,
		LAB_MAGE_ATK_COMBO_01_STRIKE,
		LAB_MAGE_ATK_COMBO_02_DASH,
		LAB_MAGE_ATK_COMBO_02_START,
		LAB_MAGE_ATK_COMBO_02_STRIKE,
		LAB_MAGE_ATK_SLASH_01_DASH,
		LAB_MAGE_ATK_SLASH_01_START,
		LAB_MAGE_ATK_SLASH_01_STRIKE,
		LAB_MAGE_ATK_SLASH_02_DASH,
		LAB_MAGE_ATK_SLASH_02_START,
		LAB_MAGE_ATK_SLASH_02_STRIKE,
		LAB_MAGE_DASH_B_START,
		LAB_MAGE_IDLE,
		LAB_MAGE_IMPACT_B,
		LAB_MAGE_IMPACT_DEATH,
		LAB_MAGE_IMPACT_FL,
		LAB_MAGE_IMPACT_FR,
		LAB_MAGE_IMPACT_HEAVY_F,
		LAB_MAGE_MIRROR,
		LAB_MAGE_WALK_B,
		LAB_MAGE_WALK_F,
		LAB_MAGE_WALK_L,
		LAB_MAGE_WALK_R,
		MAGE_ANIM_END
	};
	enum TROLL_ANIM
	{
		LAB_TROLL_ATK_CHARGE_L,
		LAB_TROLL_ATK_CHARGE_R,
		LAB_TROLL_ATK_SWIPE_L,
		LAB_TROLL_ATK_SWIPE_R,
		LAB_TROLL_ATK_UPPERCUT,
		LAB_TROLL_IDLE,
		LAB_TROLL_IMPACT_DEATH,
		LAB_TROLL_IMPACT_FROMB,
		LAB_TROLL_IMPACT_FROML,
		LAB_TROLL_IMPACT_FROMR,
		LAB_TROLL_IMPACT_HEAVY,
		LAB_TROLL_JUMP_FALL,
		LAB_TROLL_SPAWN,
		LAB_TROLL_SPRINT_F,
		LAB_TROLL_WALK_B,
		LAB_TROLL_WALK_F,
		LAB_TROLL_WALK_L,
		LAB_TROLL_WALK_R,
		TROLL_ANIM_END
	};
	enum LIGHT
	{
		LIGHT_DIR,
		LIGHT_SKILL,
		LIGHT_END
	};
	enum MONSTER_TYPE
	{
		MONSTER_TROLL,
		MONSTER_MAGE,
		MONSTER_DRUM,
		MONSTER_CONSTRUCT,
		MONSTER_BOSS,
		MONSTER_END
	};
	enum SOUND
	{
		SOUND_BGM,
		SOUND_START,

		SOUND_FLOOR_FADEIN_1,
		SOUND_FLOOR_FADEIN_2,
		SOUND_FLOOR_FADEIN_3,
		SOUND_FLOOR_FADEIN_4,
		SOUND_FLOOR_FADEIN_5,

		SOUND_FLOOR_FADEOUT_1,
		SOUND_FLOOR_FADEOUT_2,
		SOUND_FLOOR_FADEOUT_3,
		SOUND_FLOOR_FADEOUT_4,
		SOUND_FLOOR_FADEOUT_5,

		SOUND_PLAYER_ATTACK,
		SOUND_PLAYER_USE_DRAGONSTONE,
		SOUND_PLAYER_DRAGONSTONE,
		SOUND_PLAYER_VO,
		SOUND_PLAYER_DODGE,
		SOUND_PLAYER_STEP,
		SOUND_PLAYER_BLOCK,
		SOUND_PLAYER_HIT,
		SOUND_PLAYER_DRAGONHEART,

		SOUND_WAYPOINT_LOOP,
		SOUND_WAYPOINT_INTERACT,

		SOUND_MONSTER_DISSOLVE_1,
		SOUND_MONSTER_DISSOLVE_2,
		SOUND_MONSTER_DISSOLVE_3,
		SOUND_MONSTER_DISSOLVE_4,
		SOUND_MONSTER_DISSOLVE_5,

		SOUND_PUZZLE_MOVE,

		SOUND_BOSS_CHARGE,

		SOUND_END
	};
}